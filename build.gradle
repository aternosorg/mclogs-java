plugins {
    id 'java-library'
    id 'maven-publish'
    alias(libs.plugins.jmh)
    alias(libs.plugins.jreleaser)
}

sourceCompatibility = 11
targetCompatibility = 11

group = 'gs.mclo'
version = project.findProperty("release") ?: "dev"
ext.isReleaseVersion = version != "dev" &&  !version.endsWith("SNAPSHOT")

repositories {
    mavenCentral()
}

dependencies {
    compileOnly(libs.jetbrains.annotations)
    testImplementation(libs.junit.api)
    testRuntimeOnly(libs.junit.engine)

    implementation(libs.gson)
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

jmh {
    fork = 3
    iterations = 3
    warmupIterations = 0
}

java {
    withJavadocJar()
    withSourcesJar()
}

jar {
    from sourceSets.main.allSource
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'api'
            from components.java
            pom {
                name = 'mclo.gs API'
                description = 'The official java library for the mclo.gs API'
                url = 'https://github.com/aternosorg/mclogs-java'
                licenses {
                    license {
                        name = 'MIT'
                        url = 'https://github.com/aternosorg/mclogs-java/blob/master/LICENSE'
                    }
                }
                developers {
                    developer {
                        id = 'julian'
                        name = 'Julian Vennen'
                        email = 'julian@aternos.org'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/aternosorg/mclogs-java.git'
                    developerConnection = 'scm:git:git@github.com:aternosorg/mclogs-java.git'
                    url = 'https://github.com/aternosorg/mclogs-java'
                }
            }
        }
    }

    repositories {
        maven {
            url = layout.buildDirectory.dir('staging-deploy')
        }
    }
}

jreleaser {
    signing {
        active = 'RELEASE'
        armored = true
    }

    deploy {
        maven {
            mavenCentral {
                'release-deploy' {
                    active = 'RELEASE'
                    url = 'https://central.sonatype.com/api/v1/publisher'
                    stagingRepository('build/staging-deploy')
                }
            }
            nexus2 {
                'snapshot-deploy' {
                    active = 'SNAPSHOT'
                    url = 'https://central.sonatype.com/api/v1/publisher'
                    snapshotUrl = 'https://central.sonatype.com/repository/maven-snapshots'
                    snapshotSupported = true
                    closeRepository = true
                    releaseRepository = true
                    stagingRepository('build/staging-deploy')
                }
            }
        }
    }

    release {
        github {
            skipRelease = true
        }
    }
}
